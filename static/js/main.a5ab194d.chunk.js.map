{"version":3,"sources":["components/Day.js","components/Pollutant.js","components/Hour.js","components/Searchbar.js","components/DetailSide.js","components/LocationAccess.js","components/TempSide.js","App.js","index.js"],"names":["Day","this","props","date","temp","id","day","changeDay","icon","weekday","Date","toLocaleDateString","colors","parseInt","className","onClick","src","alt","Component","Pollutant","value","conc","name","replace","toUpperCase","Hour","time","hour","toLocaleTimeString","Searchbar","handleKeyPress","e","key","state","keywords","submitSearch","handleSearch","split","map","keyword","trim","location","i","length","setState","dirGeoData","prevProp","prevState","url","apiKey","fetch","data","json","parsedData","setCoords","lat","lon","type","placeholder","onChange","target","onKeyDown","DetailSide","weatherData","aqiData","geoData","current","daily","hourly","list","calcTime","minute","dt","month","year","hrs","getHours","greeting","aqi","qualityName","desc","color","getQualityName","weather","dayNum","calcDate","main","title","Object","keys","components","keyname","sunrise","sunset","index","LocationAccess","btnContainer","React","createRef","off","allowLocation","locationAllowed","ref","classList","add","innerHTML","setTimeout","TempSide","feels","rain","wind","humidity","pressure","dayTemp","max","nightTemp","night","description","feels_like","clouds","wind_speed","App","process","getPosition","position","coords","latitude","long","longitude","navigator","geolocation","getCurrentPosition","isLoading","locError","alert","console","log","weatherUrl","parsedWeatherData","aqiUrl","parsedAqiData","reverseGeoUrl","reverseGeoData","parsedRevGeoData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5ab194d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Day extends Component {\r\n\r\n  render() {\r\n    const {date, temp, id, day, changeDay, icon} = this.props;\r\n    let dt = new Date(date * 1000);\r\n    let weekday = dt.toLocaleDateString(\"en-US\", {weekday: 'short'});\r\n    let colors = parseInt(id )=== day ? 'bg-blue light-white' : 'bg-white violet';\r\n\r\n    return (\r\n      <div className={`day bold round-2 mx-2 shadow-1 ${colors}`} onClick={()=>changeDay(id)}>\r\n        {/* <i className='fa-3x p-2 my-1 fa-solid fa-cloud-sun' /> */}\r\n        <img src={`http://openweathermap.org/img/wn/${icon}.png`} \r\n          className='p-2'\r\n          alt=\"\" \r\n        />\r\n        <p className=\"weekday size-5 p\">{weekday}</p>\r\n        <p className=\"temp size-5 p\">{parseInt(temp)}&deg;</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Day;","import React, { Component } from 'react'\r\n\r\nexport class Pollutant extends Component {\r\n  render() {\r\n    const {conc, name} = this.props;\r\n\r\n    function pad(value) {\r\n      if(value > 9.9 ) {return parseInt(value)}\r\n      else {return value}\r\n    }\r\n    \r\n    return (\r\n      <div className='pollutant p-3 round-2 green'>\r\n        <p className=\"concentration bold size-4 py-1\">{pad(conc)}</p>\r\n        <p className=\"gas-name size-5 p\">{name.replace('_', '.').toUpperCase()}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pollutant;","import React, { Component } from 'react'\r\n\r\nexport class Hour extends Component {\r\n  render() {\r\n    const {temp, time} = this.props;\r\n    let hour = new Date(time * 1000).toLocaleTimeString(\"en-US\",{hour: '2-digit'});\r\n\r\n    return (\r\n      <div className='hour bg-light-orange round-2 p-1 m-1'>\r\n        <div className=\"circle\">\r\n          <p className=\"temp size-3 bold orange p-2 my-1\">{parseInt(temp)}&deg;</p>\r\n        </div>\r\n        <p className=\"hour-no size-6 grey\">{hour}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Hour","import React, { Component } from 'react'\r\n\r\nexport class Searchbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keywords: '',\r\n      location: '',\r\n      dirGeoData: [{}]\r\n    }\r\n  }\r\n\r\n  handleKeyPress = (e) => {\r\n    if(e.key === 'Enter' && this.state.keywords) {\r\n      this.submitSearch();\r\n    }\r\n  }\r\n\r\n  handleSearch = () => {this.submitSearch();}\r\n\r\n  submitSearch = () => {\r\n    let keywords = this.state.keywords.split(',')\r\n    .map((keyword)=>{\r\n      return keyword.trim();\r\n    })\r\n    \r\n    let location=\"\";\r\n    for(let i = 0; i < keywords.length; i++) {\r\n      if(i === keywords.length - 1) {\r\n        location += keywords[i];\r\n      }\r\n      else\r\n      location += keywords[i]+',';\r\n    }\r\n    this.setState({location : location})\r\n  }\r\n\r\n  async componentDidUpdate(prevProp, prevState) {\r\n    if(prevState.location !== this.state.location) {\r\n      let url = `https://api.openweathermap.org/geo/1.0/direct?q=${this.state.location}&limit=1&appid=${this.props.apiKey}`\r\n      let data = await fetch(url);\r\n      const parsedData = await data.json();\r\n      this.setState({dirGeoData: parsedData})\r\n\r\n      if(prevState.dirGeoData !== [{}]) {\r\n        this.props.setCoords(this.state.dirGeoData[0].lat, this.state.dirGeoData[0].lon);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"searchbar bg-light-white size-3 flex m-2 p-2 round-2 \">\r\n        <button className='size-4 m' onClick={this.handleSearch}>\r\n          <i className='fa-solid fa-magnifying-glass blue'></i>\r\n        </button>\r\n        <input type=\"text\" \r\n          name='search' \r\n          className='p-1 grey bg-light-white' \r\n          placeholder='search by city or state or country'\r\n          value={this.state.keywords}\r\n          onChange={(e)=>{this.setState({keywords: e.target.value})}}\r\n          onKeyDown={this.handleKeyPress}\r\n        />\r\n        <i className='px-1 grey fa-solid fa-multiply'></i>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Searchbar","// import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport Day from './Day'\r\nimport Pollutant from './Pollutant'\r\nimport Hour from './Hour'\r\nimport Searchbar from './Searchbar';\r\n\r\nexport class DetailSide extends Component {\r\n\r\n  render() {\r\n    const { day, weatherData, aqiData, geoData, changeDay, setCoords, apiKey } = this.props;\r\n    const { current, daily, hourly } = weatherData;\r\n    const { list } = aqiData;\r\n\r\n    // function to format time \r\n    function calcTime(date) {\r\n      let dt = new Date(date * 1000);\r\n      return dt.toLocaleTimeString(\"en-US\", {\r\n        hour: 'numeric',\r\n        minute: '2-digit'\r\n      })\r\n    }\r\n\r\n    // function to format date \r\n    function calcDate(date) {\r\n      let dt = new Date(date * 1000);\r\n      return dt.toLocaleDateString(\"en-US\", {\r\n        month: 'short',\r\n        day: '2-digit'\r\n      })\r\n    }\r\n\r\n    let dt = new Date(current.dt * 1000)\r\n    let date = dt.toLocaleDateString(\"en-US\", {\r\n      weekday: 'long',\r\n      day: '2-digit',\r\n      month: 'short',\r\n      year: 'numeric'\r\n    });\r\n\r\n    //  generate appropriate greeting \r\n    let hrs = dt.getHours()\r\n    let greeting = 'Good Morning';\r\n    if (hrs >= 4 && hrs < 12) {\r\n      greeting = 'Good Morning';\r\n    } else if (hrs >= 12 && hrs < 16) {\r\n      greeting = 'Good Afternoon';\r\n    } else if (hrs >= 16 && hrs < 22) {\r\n      greeting = \"Good Evening\";\r\n    } else {\r\n      greeting = \"Good Night\";\r\n    }\r\n\r\n    const dayArr = [1, 2, 3, 4, 5, 6];\r\n\r\n    // logic to decide aqi data according to day chosed \r\n    let aqi = list[0];\r\n    for (let i = 1; i < aqiData.list.length; i++) {\r\n      if (parseInt(day) === 1 && list[i].dt > (daily[1].dt - 7200) && list[i].dt <= (daily[1].dt)) {\r\n        aqi = list[i];\r\n        break;\r\n      }\r\n      else if (parseInt(day) === 2 && list[i].dt > (daily[2].dt - 7200) && list[i].dt <= (daily[2].dt)) {\r\n        aqi = list[i];\r\n        break;\r\n      }\r\n      else if (parseInt(day) === 3 && list[i].dt > (daily[3].dt - 7200) && list[i].dt <= (daily[3].dt)) {\r\n        aqi = list[i];\r\n        break;\r\n      }\r\n      else if (parseInt(day) === 4 && list[i].dt > (daily[4].dt - 7200) && list[i].dt <= (daily[4].dt)) {\r\n        aqi = list[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    // map object for qualitative name to corresponding AQI \r\n    let qualityName = {\r\n      1: {\r\n        name: 'Good',\r\n        desc: 'The quality of the air is perfect',\r\n        color: 'green'\r\n      },\r\n      2: {\r\n        name: 'Fair',\r\n        desc: 'Air quality is acceptable',\r\n        color: 'green'\r\n      },\r\n      3: {\r\n        name: 'Moderate',\r\n        desc: 'Unhealthy for sensitive groups',\r\n        color: 'green'\r\n      },\r\n      4: {\r\n        name: 'Poor',\r\n        desc: 'The quality of air is very unhealthy',\r\n        color: 'pink'\r\n      },\r\n      5: {\r\n        name: 'Very Poor',\r\n        desc: 'Everyone is more likely to be affected',\r\n        color: 'orange'\r\n      },\r\n    }\r\n\r\n    // function to bind qualityName object \r\n    function getQualityName(aqi) {\r\n      return qualityName[aqi];\r\n    }\r\n\r\n    return (\r\n      <div className='detailside px-4 py-2'>\r\n        <div className=\"header flex py-2\">\r\n          <div className=\"\">\r\n            <h2 className=\"time blue size-1 py\">{calcTime(current.dt)}</h2>\r\n            <p className=\"date violet bold size-5 py\">{date}</p>\r\n            <h3 className=\"greeting blue size-2 py\">{greeting}</h3>\r\n          </div>\r\n          <div className=\"location flex p-1 mx-1\">\r\n            <p className=\"size-1 bold blue\">{geoData[0].state}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"det-search\">\r\n          <Searchbar setCoords={setCoords} apiKey={apiKey} />\r\n        </div>\r\n\r\n        <div className=\"days flex py-2\">\r\n          <Day key='0' id={0} date={current.dt} temp={current.temp}\r\n            day={day} changeDay={changeDay} icon={current.weather[0].icon}\r\n          />\r\n          {dayArr.map((dayNum) => {\r\n            return <Day key={dayNum} id={dayNum} date={daily[dayNum].dt}\r\n              temp={daily[dayNum].temp.day} day={day} changeDay={changeDay}\r\n              icon={daily[dayNum].weather[0].icon}\r\n            />\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"aqi-sec p-4 round-2 bg-white shadow-1\">\r\n          <div className=\"flex aqi-head\">\r\n            <h5 className='p violet'>Air Quality Index</h5>\r\n            <p className=\"date p size-6 grey\">{calcDate(aqi.dt)}</p>\r\n          </div>\r\n          <div className={`flex py-3 ${getQualityName(aqi.main.aqi).color}`}>\r\n            <i className=\"wind-icon p size-2 fa-solid fa-wind\"></i>\r\n            <div className='p mx-2'>\r\n              <p className=\"quality bold size-6\">\r\n                {getQualityName(aqi.main.aqi).name}\r\n              </p>\r\n              <p className=\"descript size-6 grey\">{getQualityName(aqi.main.aqi).desc}</p>\r\n            </div>\r\n            {parseInt(day) > 4 ? <i className=\"info size-6 orange fa-solid fa-circle-info\"\r\n              title='AQI data of only 5 days is available'>\r\n            </i> : <></>}\r\n          </div>\r\n          <div className=\"aqi-gases flex py-2 green\">\r\n            {\r\n              Object.keys(aqi.components).map(keyname => {\r\n                // eslint-disable-next-line\r\n                if (keyname === 'nh3' || keyname === 'no') { return }\r\n                return <Pollutant key={keyname} conc={aqi.components[keyname]} name={keyname} />\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"rise-set-section p-4 bg-white round-2 shadow-1\">\r\n          <h5 className='p violet '>Sunrise & Sunset</h5>\r\n          <div className='bg-light-orange round-2 my-3 p-2'>\r\n            <p className=\"place size-5 py violet\">{geoData[0].state}</p>\r\n            <div className=\"rise-set flex py-2 my\">\r\n              <div className=\"flex rise\">\r\n                <i className=\"orange fa-2x fa-solid fa-sun\"></i>\r\n                <div className='mx-2 px-2'>\r\n                  <p className=\"sunrise grey size-5 \">Sunrise</p>\r\n                  <p className=\"time blue size-4 bold\">\r\n                    {day === 0 ? calcTime(current.sunrise) : calcTime(daily[day].sunrise)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex set\">\r\n                <i className=\"orange fa-2x fa-solid fa-moon\"></i>\r\n                <div className='mx-2 px-2'>\r\n                  <p className=\"sunset grey size-5 \">Sunset</p>\r\n                  <p className=\"time blue size-4 bold\">\r\n                    {day === 0 ? calcTime(current.sunset) : calcTime(daily[day].sunset)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"hourly bg-white flex p-2 my round-2 shadow-1\"> {\r\n          day <= 1 ? // eslint-disable-next-line\r\n            hourly.map((hour, index) => {\r\n              if (day === 0 && (hour.dt <= daily[0].dt + (18 * 3600))) {\r\n                return <Hour key={index} temp={hour.temp} time={hour.dt} />\r\n              }\r\n\r\n              else if (day === 1 && (hour.dt >= daily[0].dt + (18 * 3600)) && (hour.dt <= daily[1].dt + (18 * 3600))) {\r\n                return <Hour key={index} temp={hour.temp} time={hour.dt} />\r\n              }\r\n            })\r\n            : <div className='flex alert m-1 p-1'>\r\n              <p className='size-5 bold p py-3 orange'>\r\n                Sorry ! Hourly data for more than two days is not available\r\n              </p>\r\n            </div>\r\n\r\n        }\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DetailSide","import React, { Component } from 'react'\r\nimport '../Location.css';\r\n\r\nexport class LocationAccess extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.btnContainer = React.createRef();\r\n    this.off = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    const { allowLocation, locationAllowed } = this.props;\r\n\r\n    function handleOnClick(btnContainer, off) {\r\n      btnContainer.current.classList.add('btn-container-on');\r\n      off.current.innerHTML = 'ON';\r\n      setTimeout(allowLocation, 600)\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {!locationAllowed ? <>\r\n        <p className=\"give-location violet p m-1 my-3 size-4\">Allow access to your location to view the weather details</p>\r\n        <div ref={this.btnContainer} className=\"btn-container-off p-1\" onClick={() => { handleOnClick(this.btnContainer, this.off) }}>\r\n          <div className=\"small-btn\">\r\n            <p ref={this.off} className=\"switch-off\" id=\"on-off\">OFF</p>\r\n            <div className=\"light\" ></div>\r\n          </div>\r\n        </div>\r\n        <p className=\"title p size-5 semi-bold blue m-1\">Location</p>\r\n        </> :\r\n        <>\r\n        <div className=\"pendulum first shadow-1\"></div>\r\n        <div className=\"pendulum second\"></div>\r\n        <p className=\"wait size-4 semi-bold grey\">wait...</p>\r\n        </>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LocationAccess","import React, { Component } from 'react'\r\nimport Searchbar from './Searchbar';\r\n\r\nexport class TempSide extends Component {\r\n\r\n  render() {\r\n    const {day, weatherData, setCoords, apiKey} = this.props;\r\n    const { current, daily } = weatherData;\r\n\r\n    // function to format date \r\n    function calcDate(date) {\r\n      let dt = new Date(date * 1000)\r\n      return dt.toLocaleDateString(\"en-US\", {\r\n        weekday: 'long',\r\n        day: '2-digit',\r\n        month: 'short',\r\n      });\r\n    }\r\n\r\n    let date, weather, temp, feels, rain, wind, humidity, pressure, icon;\r\n    let dayTemp = daily[day].temp.max;\r\n    let nightTemp = daily[day].temp.night;\r\n\r\n    if(day === 0) {\r\n      date = calcDate(current.dt)\r\n      weather = current.weather[0].description\r\n      temp = current.temp\r\n      feels = current.feels_like\r\n      rain = current.clouds\r\n      wind = current.wind_speed\r\n      humidity = current.humidity\r\n      pressure = current.pressure\r\n      icon = current.weather[0].icon\r\n    } else {\r\n      date = calcDate(daily[day].dt)\r\n      weather = daily[day].weather[0].description\r\n      temp = daily[day].temp.day\r\n      feels = daily[day].feels_like.day\r\n      rain = daily[day].clouds\r\n      wind = daily[day].wind_speed\r\n      humidity = daily[day].humidity\r\n      pressure = daily[day].pressure\r\n      icon = daily[day].weather[0].icon\r\n    }\r\n\r\n    return (\r\n      <div className='tempSide flex bg-white p-4'>\r\n        <div className=\"temp-search\">\r\n          <Searchbar setCoords={setCoords} apiKey={apiKey} />\r\n        </div>\r\n\r\n        <div className=\"temp-card flex bg-blue light-white round-2 mx-2 my-3 p-4 shadow-2\">\r\n          {/* <i className='m-1 fa-4x fa-solid fa-cloud-sun' /> */}\r\n          <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} \r\n            className='' \r\n            alt=\"\" \r\n          />\r\n          <p className=\"date semi-bold size-5 p-2 m-2\">{date}</p>\r\n          <h1 className=\"temp my-2\">\r\n            {parseInt(temp)}&deg;\r\n          </h1>\r\n          <p className=\"day-desc p bold m-2\">{weather}</p>\r\n\r\n          <div className=\"flex fields p my-1\">\r\n            <p className=\"name feels-like\">Feels</p>\r\n            <div className=\"separator mx-2\"></div>\r\n            <p className=\"value\">{feels}&deg;</p>\r\n          </div>\r\n\r\n          <div className=\"flex fields p my-1\">\r\n            <p className=\"name rain\">Precipitaion</p>\r\n            <div className=\"separator mx-2\"></div>\r\n            <p className=\"value\">{rain} %</p>\r\n          </div>\r\n\r\n          <div className=\"flex fields p my-1\">\r\n            <p className=\"name day-temp\">Day</p>\r\n            <div className=\"separator mx-2\"></div>\r\n            <p className=\"value\">{parseInt(dayTemp)}&deg;</p>\r\n          </div>\r\n\r\n          <div className=\"flex fields p my-1\">\r\n            <p className=\"name night-temp\">Night</p>\r\n            <div className=\"separator mx-2\"></div>\r\n            <p className=\"value\">{parseInt(nightTemp)}&deg;</p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"wind-card bg-pink round-2 light-white p-4 m-2 shadow-2\">\r\n          <div className=\"flex fields p my-1 size-5\">\r\n            <i className='fa-solid fa-wind'></i>\r\n            <p className=\"name mx-3\">Wind</p>\r\n            <p className=\"separator mx-2\"></p>\r\n            <p className=\"value\">{parseInt(wind * 3.6)} km/h</p>\r\n          </div>\r\n          <div className=\"flex fields p my-1 size-5\">\r\n            <i className='fa-solid fa-droplet'></i>\r\n            <p className=\"name mx-3\">Humidity</p>\r\n            <p className=\"separator mx-2\"></p>\r\n            <p className=\"value\">{humidity} %</p>\r\n          </div>\r\n          <div className=\"flex fields p my-1 size-5\">\r\n            <i className='fa-brands fa-safari'></i>\r\n            <p className=\"name mx-3\">Pressure</p>\r\n            <p className=\"separator mx-2\"></p>\r\n            <p className=\"value\">{parseInt(pressure)} hPa</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"footer flex grey px-3 m size-8\">\r\n          <p className=\"dev\">By Kishan Kumar</p>\r\n          <p className=\"api-name\">openweathermap.org</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TempSide","\r\nimport React, { Component } from 'react'\r\nimport './App.css';\r\nimport DetailSide from './components/DetailSide';\r\nimport LocationAccess from './components/LocationAccess';\r\nimport TempSide from './components/TempSide';\r\n\r\nexport class App extends Component {\r\n  apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      weatherData: {},\r\n      aqiData: {},\r\n      geoData: [{}],\r\n      isLoading: false,\r\n      locationAllowed: false,\r\n      locError: '',\r\n      lat: \"\",\r\n      long: \"\",\r\n      day: 0\r\n    }\r\n  }\r\n\r\n  // function to get coordinates \r\n  getPosition = (position) => {\r\n    this.setState({\r\n      lat: position.coords.latitude,\r\n      long: position.coords.longitude\r\n    })\r\n  }\r\n\r\n  // function to set coordinates after searching a location\r\n  setCoords = (lat, long) => {\r\n    if(lat && long) {\r\n      this.setState({\r\n        lat: lat,\r\n        long: long,\r\n        day: 0\r\n      })\r\n    }\r\n  }\r\n\r\n  // function to get location access \r\n  allowLocation = () => {\r\n    try {\r\n      navigator.geolocation.getCurrentPosition(this.getPosition)\r\n      this.setState({ locationAllowed: true, isLoading: true})\r\n    }\r\n    catch (e) {\r\n      this.setState({locError: e,\r\n        isLoading: true,\r\n        lat: \"28.644800\",\r\n        long: \"77.216721\"\r\n      })\r\n      alert('Unable to access location !');\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  // Fetching data \r\n  async componentDidUpdate(prevProp, prevState) {\r\n    if(prevState.lat !== this.state.lat) {\r\n      this.setState({ isLoading: true })\r\n      // Fetching weather data \r\n      let weatherUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.long}&units=metric&exclude=minutely,alerts&appid=${this.apiKey}`;\r\n      let weatherData = await fetch(weatherUrl);\r\n      let parsedWeatherData = await weatherData.json();\r\n      \r\n      // fetching AQI data\r\n      let aqiUrl = `https://api.openweathermap.org/data/2.5/air_pollution/forecast?lat=${this.state.lat}&lon=${this.state.long}&appid=${this.apiKey}`;\r\n      let aqiData = await fetch(aqiUrl);\r\n      let parsedAqiData = await aqiData.json();\r\n\r\n      // fetching Reverse Geo data\r\n      let reverseGeoUrl = `https://api.openweathermap.org/geo/1.0/reverse?lat=${this.state.lat}&lon=${this.state.long}&limit=3&appid=${this.apiKey}`;\r\n      let reverseGeoData = await fetch(reverseGeoUrl);\r\n      let parsedRevGeoData = await reverseGeoData.json();\r\n  \r\n      this.setState({\r\n        weatherData: parsedWeatherData,\r\n        aqiData: parsedAqiData,\r\n        geoData: parsedRevGeoData,\r\n        isLoading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  changeDay = (id) => {\r\n    this.setState({ day: parseInt(id) })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n        {(this.state.locationAllowed || this.state.locError !== '') && !this.state.isLoading? <>\r\n            <DetailSide \r\n              weatherData={this.state.weatherData} \r\n              aqiData={this.state.aqiData} \r\n              geoData={this.state.geoData} \r\n              day={this.state.day}\r\n              changeDay={this.changeDay}\r\n              apiKey={this.apiKey} \r\n              setCoords={this.setCoords} \r\n            />\r\n            <TempSide \r\n              weatherData={this.state.weatherData} \r\n              day={this.state.day}\r\n              apiKey={this.apiKey} \r\n              setCoords={this.setCoords}\r\n            /> \r\n          </> :\r\n          <LocationAccess \r\n            locationAllowed={this.state.locationAllowed} \r\n            allowLocation={this.allowLocation}\r\n          />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}